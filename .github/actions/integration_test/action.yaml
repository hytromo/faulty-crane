name: Integration test
description: Installs the dependencies required according to the type of changed projects and places required files where they should be
inputs:
  container_registry_url:
    description: "The container registry url"
    required: false # for dockerhub this can be empty
  container_registry_username:
    description: "The container registry username"
    required: true
  container_registry_password:
    description: "The container registry password"
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.container_registry_url }}
        username: ${{ inputs.container_registry_username }}
        password: ${{ inputs.container_registry_password }}

    - name: Start minikube
      uses: medyagh/setup-minikube@master

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install Yarn
      shell: bash
      run: |
        npm install -g yarn

    - name: Build faulty crane
      shell: bash
      run: |
        go build -o test/faulty-crane cli/faulty-crane/*.go

    - name: Deploy images inside the k8s cluster
      shell: bash
      env:
        CONTAINER_REGISTRY_URL: ${{ inputs.container_registry_url }}
        CONTAINER_REGISTRY_USERNAME: ${{ inputs.container_registry_username }}
        CONTAINER_REGISTRY_PASSWORD: ${{ inputs.container_registry_password }}
      run: |
        cd test
        yarn install --frozen-lockfile
        # also generates appropriate faulty-crane configuration
        yarn run ts-node populate_registry_and_cluster.ts

    - name: Run faulty-crane
      shell: bash
      env:
        FAULTY_CRANE_CONTAINER_REGISTRY_USERNAME: ${{ inputs.container_registry_username }}
        FAULTY_CRANE_CONTAINER_REGISTRY_PASSWORD: ${{ inputs.container_registry_password }}
      run: |
        pwd
        ls
        cd test
        ./faulty-crane plan -config faulty-crane.json -out plan.json --raw-plan
        cat plan.json
